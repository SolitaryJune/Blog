---
layout:     post
title:      "Typora"
subtitle:   "Markdown"
date:       2019-08-08
author:     "elmagnifico"
header-img: "img/git-head-bg.jpg"
catalog:    true
tags:
    - Markdown
---
## Markdown

之前一直用的Atom中的markdown， 时隔两年半再次更新一下写markdown的工具

## Atom

先说一下Atom的优点：

- 插件非常多，功能强大
- 可以使用plantuml，直接在编辑器里用代码画图，当然是比较简单的，限制也比较多，但是可以画uml图
- 也有一些特别牛逼的打字特效，看起来很炫酷，不过很吃资源
- 可以直接分页预览
- 可以直接在tab中切换文件，并且同时也有文件目录的导航栏
- 有vim输入模式

平常使用不是很多，所以只用了到一些简单的markdown写作的功能，偶尔导出一下html或者pdf什么的，总的来说对于他的要求不是很高。

再来说说缺点：

- 分页预览，写的地方是原生的markdown的样子，只有零一页才是预览的网页样式，相当于凭空占用了半个屏幕，其实有点浪费，当然当年大家的markdown都是这样的，也没人说要一页既能写markdown原生格式又能实时预览

- 大文件卡顿严重，可能平常写个markdown笔记或者是文章，其实都很短，根本体验不到这种卡顿，但是我拿了一个文件作为代码片段，平常赋值粘贴一些常用的代码，随着时间推移，这个文件越来越大，代码越来越多，atom明显就显示不过来，拖动的时候可以明显感觉到卡顿

- 启动太慢了，当然启动慢可能和我很久没更新有关系，毕竟从17年3月份开始用就再没有更新过了，插件倒是更新过，但是主体从没更新过，导致每次启动我都要等很久，大概十几秒的样子，所以经常开着都不关了，懒得再启动一次。当然很多插件我基本不用的都关闭了，为了让他启动快一点。

- 插件时不时还是会失灵一下，要重启或者重新开启分页什么的才能正常工作

-  markdown里面插入表格非常麻烦，而且写出来的原生的样式也不好看

- markdown里面如果我打了很多回车会自动给我消除回车，这就导致我想让这个文件变的长一些那是绝对不可能的，除非我在最后一行输入一个非回车字符才能让他不自动消除回车，这就很蠢

基于以上的这些，加上最近看到了typora，发现这个东西挺好的啊，实时渲染，所见即所得，比分两页强多了。

而且可以快速插入表格，可以快速高亮显示，把markdown一些常用的复杂操作可以直接快捷键化，这样就很方便啊。

## Typora

##### Typora 优点：

- 实时显示，所见即所得
- 可以写数学表达式，可以转word（atom可能也有插件支持）
- 简洁，启动快，可以显示文章大纲（atom可能也有插件支持）
- 快捷键非常丰富
- 内置图表,像下面这样的
- 可以导出为latex OPML 等一些小众格式
- 可以直接对某一块进行操作，删除什么的，宏观性的操作更人性化了
- 加入图片可以自动复制到对应目录下，对于写blog什么的非常方便，虽然我也不用。使用PicGo+SM.MS就已经非常完美的可以解决图片问题了
- mac下会有历史版本管理，类似于git，但是windows下就没有这个功能了，有点遗憾

![](https://img.elmagnifico.tech/static/upload/elmagnifico/qTjtL8mC9dHSyVR.png)

##### 缺点：

- 不支持vim模式，这个貌似已经被喊了一两年了都没有添加，但是想一想在这种实时预览的模式下用vim可能确实有点麻烦，如果只是纯原码编辑分页显示，用vim可能问题不大
- 闭源，这个就导致你要想改改那就基本不可能了，别人做成啥你用啥
- 有导航栏，但是我同时还想要一个类似网页的tab可以直接切换文件，说白了就是把导航栏中的文件和大纲进行分离
- 沉浸式和打字机式的书写模式，虽然我不用
- 比较吃快捷键操作,有时候修改标题什么的大小,就不能直接加#进去,要么用快捷键,要么用源码模式进行书写,不然直接加入就是一个#而不是markdown格式

## 总结

总体来说体验比较好，专注做一件事各种方面细节考虑的都比较周到.

下面的引用总算正常了，之前每次写引用我都要手动多加一个>，不然就会出现引用网址都在同一行的情况，而typora自动就是增加两个>，不用我手动再写了



## Quote

> https://www.jianshu.com/p/602f6ecf48fd
>
> https://blog.csdn.net/y_bing/article/details/80196827
>
> https://blog.csdn.net/y_bing/article/details/80196827
